/*==============================================================*/
/* DBMS name:      PostgreSQL 8                                 */
/* Created on:     5/28/2019 9:44:10 AM                         */
/*==============================================================*/


/*==============================================================*/
/* Table: CATEGORYSALE                                          */
/*==============================================================*/
create table CATEGORYSALE (
   ID_CATEGORY          SERIAL               not null,
   CATEGORY_NAME        CHAR(50)             null,
   constraint PK_CATEGORYSALE primary key (ID_CATEGORY)
);

/*==============================================================*/
/* Table: DEPARTEMENT                                           */
/*==============================================================*/
create table DEPARTEMENT (
   ID_DEPARTMENT        SERIAL               not null,
   ID_FACULTE           INT4                 not null,
   DEPARTMENT_NAME      VARCHAR(100)         null,
   constraint PK_DEPARTEMENT primary key (ID_DEPARTMENT)
);

/*==============================================================*/
/* Table: FACULTE                                               */
/*==============================================================*/
create table FACULTE (
   ID_FACULTE           SERIAL               not null,
   FACULTE_NAME         VARCHAR(100)         null,
   constraint PK_FACULTE primary key (ID_FACULTE)
);

/*==============================================================*/
/* Table: IS_IN                                                 */
/*==============================================================*/
create table IS_IN (
   ID_USER              INT4                 not null,
   ID_DEPARTMENT        INT4                 not null,
   constraint PK_IS_IN primary key (ID_USER, ID_DEPARTMENT)
);

/*==============================================================*/
/* Table: LOG                                                   */
/*==============================================================*/
create table LOG (
   ID_LOG               SERIAL               not null,
   ID_USER              INT4                 not null,
   EVENT_DESCRIPTION    VARCHAR(200)         null,
   LOG_TIME             DATE                 null,
   constraint PK_LOG primary key (ID_LOG)
);

/*==============================================================*/
/* Table: PAYS                                                  */
/*==============================================================*/
create table PAYS (
   ID_PAYS              SERIAL               not null,
   PAYS_NAME            CHAR(50)             null,
   constraint PK_PAYS primary key (ID_PAYS)
);

/*==============================================================*/
/* Table: SALE                                                  */
/*==============================================================*/
create table SALE (
   ID_SALE              SERIAL               not null,
   ID_CATEGORY          INT4                 not null,
   ID_USER              INT4                 not null,
   ID_STATUSSALE        INT4                 not null,
   SALE_TITLE           CHAR(50)             null,
   SALE_DESCRIPTION     VARCHAR(1000)        null,
   SALE_DATE            DATE                 null,
   SALE_PRICE           MONEY                null,
   SALE_WEAR            INT4                 null,
   SALE_NEGO            BOOL                 null,
   SALE_LOCATION        CHAR(50)             null,
   constraint PK_SALE primary key (ID_SALE)
);

/*==============================================================*/
/* Table: SALEBYDEPARTMENT                                      */
/*==============================================================*/
create table SALEBYDEPARTMENT (
   ID_DEPARTMENT        INT4                 not null,
   ID_SALE              INT4                 not null,
   constraint PK_SALEBYDEPARTMENT primary key (ID_DEPARTMENT, ID_SALE)
);

/*==============================================================*/
/* Table: SALEBYSESSION                                         */
/*==============================================================*/
create table SALEBYSESSION (
   ID_SESSION           INT4                 not null,
   ID_SALE              INT4                 not null,
   constraint PK_SALEBYSESSION primary key (ID_SESSION, ID_SALE)
);

/*==============================================================*/
/* Table: SALEPICTURE                                           */
/*==============================================================*/
create table SALEPICTURE (
   ID_PICTURE           SERIAL               not null,
   ID_SALE              INT4                 not null,
   PICTURE_LINK         VARCHAR(500)         null,
   constraint PK_SALEPICTURE primary key (ID_PICTURE)
);

/*==============================================================*/
/* Table: SALESTATUS                                            */
/*==============================================================*/
create table SALESTATUS (
   ID_STATUSSALE        SERIAL               not null,
   STATUSSALE_NAME      CHAR(50)             null,
   constraint PK_SALESTATUS primary key (ID_STATUSSALE)
);

/*==============================================================*/
/* Table: SESSION                                               */
/*==============================================================*/
create table SESSION (
   ID_SESSION           SERIAL               not null,
   SESSION_NAME         CHAR(50)             null,
   constraint PK_SESSION primary key (ID_SESSION)
);

/*==============================================================*/
/* Table: STATUSBYUSER                                          */
/*==============================================================*/
create table STATUSBYUSER (
   ID_STATUS            INT4                 not null,
   ID_USER              INT4                 not null,
   constraint PK_STATUSBYUSER primary key (ID_STATUS, ID_USER)
);

/*==============================================================*/
/* Table: STUDIES                                               */
/*==============================================================*/
create table STUDIES (
   ID_USER              INT4                 not null,
   ID_SESSION           INT4                 not null,
   constraint PK_STUDIES primary key (ID_USER, ID_SESSION)
);

/*==============================================================*/
/* Table: "USER"                                                */
/*==============================================================*/
create table "USER" (
   ID_USER              SERIAL               not null,
   ID_PAYS              INT4                 not null,
   FIRST_NAME           VARCHAR(50)          null,
   LAST_NAME            VARCHAR(50)          null,
   USERNAME             CHAR(20)             null,
   PASSWORD             CHAR(20)             null,
   EMAIL                CHAR(50)             null,
   PHONE                CHAR(20)             null,
   CELL_PHONE           CHAR(20)             null,
   VILLE                CHAR(50)             null,
   COTE_SELLER          INT4                 null,
   constraint PK_USER primary key (ID_USER)
);

/*==============================================================*/
/* Table: USERSTATUS                                            */
/*==============================================================*/
create table USERSTATUS (
   ID_STATUS            SERIAL               not null,
   STATUS_NAME          VARCHAR(100)         null,
   constraint PK_USERSTATUS primary key (ID_STATUS)
);

alter table DEPARTEMENT
   add constraint FK_DEPARTEM_ASSOCIETE_FACULTE foreign key (ID_FACULTE)
      references FACULTE (ID_FACULTE)
      on delete restrict on update restrict;

alter table IS_IN
   add constraint FK_IS_IN_IS_IN_USER foreign key (ID_USER)
      references "USER" (ID_USER)
      on delete restrict on update restrict;

alter table IS_IN
   add constraint FK_IS_IN_IS_IN2_DEPARTEM foreign key (ID_DEPARTMENT)
      references DEPARTEMENT (ID_DEPARTMENT)
      on delete restrict on update restrict;

alter table LOG
   add constraint FK_LOG_LOGS_USER foreign key (ID_USER)
      references "USER" (ID_USER)
      on delete restrict on update restrict;

alter table SALE
   add constraint FK_SALE_CATEGORIS_CATEGORY foreign key (ID_CATEGORY)
      references CATEGORYSALE (ID_CATEGORY)
      on delete restrict on update restrict;

alter table SALE
   add constraint FK_SALE_SELLS_USER foreign key (ID_USER)
      references "USER" (ID_USER)
      on delete restrict on update restrict;

alter table SALE
   add constraint FK_SALE_STATUE_SALESTAT foreign key (ID_STATUSSALE)
      references SALESTATUS (ID_STATUSSALE)
      on delete restrict on update restrict;

alter table SALEBYDEPARTMENT
   add constraint FK_SALEBYDE_SALEBYDEP_DEPARTEM foreign key (ID_DEPARTMENT)
      references DEPARTEMENT (ID_DEPARTMENT)
      on delete restrict on update restrict;

alter table SALEBYDEPARTMENT
   add constraint FK_SALEBYDE_SALEBYDEP_SALE foreign key (ID_SALE)
      references SALE (ID_SALE)
      on delete restrict on update restrict;

alter table SALEBYSESSION
   add constraint FK_SALEBYSE_SALEBYSES_SESSION foreign key (ID_SESSION)
      references SESSION (ID_SESSION)
      on delete restrict on update restrict;

alter table SALEBYSESSION
   add constraint FK_SALEBYSE_SALEBYSES_SALE foreign key (ID_SALE)
      references SALE (ID_SALE)
      on delete restrict on update restrict;

alter table SALEPICTURE
   add constraint FK_SALEPICT_CONTAINS_SALE foreign key (ID_SALE)
      references SALE (ID_SALE)
      on delete restrict on update restrict;

alter table STATUSBYUSER
   add constraint FK_STATUSBY_STATUSBYU_USERSTAT foreign key (ID_STATUS)
      references USERSTATUS (ID_STATUS)
      on delete restrict on update restrict;

alter table STATUSBYUSER
   add constraint FK_STATUSBY_STATUSBYU_USER foreign key (ID_USER)
      references "USER" (ID_USER)
      on delete restrict on update restrict;

alter table STUDIES
   add constraint FK_STUDIES_STUDIES_USER foreign key (ID_USER)
      references "USER" (ID_USER)
      on delete restrict on update restrict;

alter table STUDIES
   add constraint FK_STUDIES_STUDIES2_SESSION foreign key (ID_SESSION)
      references SESSION (ID_SESSION)
      on delete restrict on update restrict;

alter table "USER"
   add constraint FK_USER_HAS_PAYS foreign key (ID_PAYS)
      references PAYS (ID_PAYS)
      on delete restrict on update restrict;

